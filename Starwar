PImage  universe;
Plane plane ;
Enemy[] enemy = new Enemy[20];
int enemyCounter = 0 ;
int moveEnemy1, moveEnemy2;
int nextEnemyShowTime;
int frameCounter = 0;


Bullet[] pBullet = new Bullet[50];
Bullet[] eBullet = new Bullet[50];


void setup() {
  size(1200, 800);
  frameRate(60);
  noCursor();
   
  universe = loadImage("img/universe.jpg"); 

  plane = new Plane();
  
  moveEnemy1 = floor(random(0, enemy.length/2));
  moveEnemy2 = floor(random(enemy.length/2, enemy.length));
  nextEnemyShowTime = 0; 
}
 
void draw() {
  
  image(universe, 0, 0, width, height);
  
  if(frameCounter == nextEnemyShowTime) {

    if(enemyCounter == moveEnemy1 || enemyCounter == moveEnemy2) {
      enemy[enemyCounter] = new moveEnemy();
    } else {
      enemy[enemyCounter] = new shotEnemy();
    }
    
    enemyCounter++;
    enemyCounter %= 20;
    
    nextEnemyShowTime = frameCounter + floor(random(50, 120));
    
  }
  
  
  /* the enemy bullet */
  for(Bullet EB : eBullet) {
    if(EB != null && EB.isAlive) {
      EB.move();
      EB.display();
      
      /* when enemy bullet collision to plane will... */
      if(plane.checkCollision(EB.x, EB.y, EB.w, EB.h)) {
        EB.isAlive = false;
      }
    }
  }
  
  
  /* the plane */
  plane.move();
  plane.display();
  if (frameCounter % 10 == 0){
    plane.shot();}
  
  
  /* the plane bullet */
  for(Bullet PB : pBullet) {
    if(PB != null && PB.isAlive) {
      PB.move();
      PB.display();
      
      /* when plane bullet collision to enemy will... */
      for(Enemy E : enemy) {
        if (E != null && E.isAlive) {
          if(E.checkCollision(PB.x, PB.y, PB.w, PB.h)) {
            PB.isAlive = false;
            break;
          }
        }
      }
    }
  }
  
  
  /* the enemy */
  for(Enemy E : enemy ) {
    if (E != null && E.isAlive) {
      E.move();
      E.update();
      E.display();
    }
  } 
  
  /* the bullet */
  for(Bullet PB : pBullet) {
    if(PB != null && PB.isAlive) {
      
      for(Bullet EB : eBullet) {
        if(EB != null && EB.isAlive) {
          
          if(isHit(PB.x, PB.y, PB.w, PB.h, EB.x, EB.y, EB.w, EB.h)) {
            PB.isAlive = false;
            EB.isAlive = false;
            break;
          }
        }
      }
    }
  }
  
  frameCounter++;
}


void keyPressed() {
  if(key==CODED) {
    switch(keyCode) {
    case LEFT:
      plane.shot();
    break;
    }
  }
}


boolean isHit(float ax, float ay, float aw, float ah, float bx, float by, float bw, float bh) {
    return  ax + aw > bx &&    
            ax < bx + bw &&    
            ay + ah > by &&    
            ay < by + bh;
}
